[{"C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\index.js":"1","C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\reportWebVitals.js":"2","C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\App.js":"3","C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\app-component\\weather-component.js":"4","C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\app-component\\form-component.js":"5","C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\app-component\\Footer.js":"6","C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\app-component\\Header.js":"7"},{"size":500,"mtime":1607526057891,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":3487,"mtime":1607528423798,"results":"11","hashOfConfig":"9"},{"size":792,"mtime":1607525510301,"results":"12","hashOfConfig":"9"},{"size":1179,"mtime":1607523794492,"results":"13","hashOfConfig":"9"},{"size":180,"mtime":1607527569270,"results":"14","hashOfConfig":"9"},{"size":217,"mtime":1607528294977,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1egvj5b",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\index.js",[],["33","34"],"C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\reportWebVitals.js",[],"C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\App.js",["35"],"import Weather from \"./app-component/weather-component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Form from \"./app-component/form-component\";\nimport Footer from \"./app-component/Footer\";\nimport Header from \"./app-component/Header\";\n\nconst API_KEY = \"02575f5a7d982d4400b92a3716cf92a5\";\n\n//Make API call => api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false,\n    };\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\",\n    };\n  }\n\n  calculateCelsius(temp) {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  get_weatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({ icon: this.weatherIcon.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: this.weatherIcon.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere });\n        break;\n      case rangeId == 800:\n        this.setState({ icon: this.weatherIcon.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds });\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds });\n    }\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`\n      );\n\n      const response = await api_call.json();\n      console.log(response);\n\n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        celsius: this.calculateCelsius(response.main.temp),\n        temp_max: this.calculateCelsius(response.main.temp_max),\n        temp_min: this.calculateCelsius(response.main.temp_min),\n        description: response.weather[0].main,\n        error: false,\n      });\n\n      this.get_weatherIcon(this.weatherIcon, response.weather[0].id);\n    } else {\n      this.setState({ error: true });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Form loadWeather={this.getWeather} error={this.state.error} />\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n          weatherIcon={this.state.icon}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\app-component\\weather-component.js",[],"C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\app-component\\form-component.js",["36"],"import React, { Component } from \"react\";\r\nimport \"./form-component.css\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div>{props.error ? error() : null}</div>\r\n      <form onSubmit={props.loadWeather}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 offset-md-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"city\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"City\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"country\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"Country\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-md-0 py-2 text-md-left\">\r\n            <button className=\"btn btn-warning\">Get Weather</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction error() {\r\n  return (\r\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n      Please Enter City and Country\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\app-component\\Footer.js",[],"C:\\PushkarWorkspace\\FrontEnd\\weather-app\\src\\app-component\\Header.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":62,"column":20,"nodeType":"43","messageId":"44","endLine":62,"endColumn":22},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]